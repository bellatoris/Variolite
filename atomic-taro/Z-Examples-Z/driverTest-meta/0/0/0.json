{"date":"01/10/2017 6:21pm","text":[{"text":"import matplotlib.pyplot as pyplot\nimport numpy as np\nimport math\n\n\n"},{"date":"01/10/2017 6:21pm","text":[{"text":"def distance(x0, y0, x1, y1):\n\treturn math.sqrt((x1-x0)**2 + (y1-y0)**2)\n"}],"varID":"ee4c52e4e229aa97b168b7509af31eed100dcc45","branchID":0,"commitID":0,"output":["3758d08bb5374d7d144a5fd3f1469d12af751106"]},{"text":"\ndef computeAngle (p1, p2):\n\tdot = 0\n\tif computeNorm(p2[0], p2[1]) == 0 or computeNorm(p1[0], p1[1])==0:\n\t\tdot = 0\n\telse:\n\t\tdot = (p2[0]*p1[0]+p2[1]*p1[1])/float(computeNorm(p1[0], p1[1])*computeNorm(p2[0], p2[1]))\n\tif dot > 1:\n\t\tdot = 1\n\telif dot < -1:\n\t\tdot = -1\n\treturn math.acos(dot)*180/math.pi\n\ndef compute_AllAngles (trip):\n\tdV =  np.diff(trip, axis = 0) #x1-x0 and y1-y0\n\tangles = np.empty(shape = dV.shape[0])\n\tfor i in range(1, trip.shape[0] - 1):\n\t\tang = computeAngle(dV[i-1], dV[i])\n\t\tnp.append(angles, [ang, dV[i][2]]) #append angle with timepoint\n\treturn angles\n\ndef findStops(speeds):\n\tstops = [] #stops are a start and end time pair\n\tstart = -1\n\tend = -1\n\tfor i in range(1, len(speeds)):\n\t\tadvS = (speeds[i] + speeds[i-1])/2 #smooth out noise in stop duration\n\t\tif speeds[i] == 0: #start of stop\n\t\t\tend = i\n\t\t\tif start == -1:\n\t\t\t\tstart = i\n\t\telif (start > -1) and (advS > 1):\n\t\t\tstops.append([start,end])\n\t\t\tstart = -1\n\t\t\tend = -1\n\tif start > -1:\n\t\tstops.append([start, len(speeds)])\n\treturn stops\n\n\n\ndef printHist_Feature(hist):\n\th = \"\"\n\tfor i in range(len(hist)-1):\n\t\th += str(hist[i])+\",\"\n\t#to avoid final comma (will mess up input)\n\th += str(hist[len(hist)-1])\n\treturn h\n\n\ndef computeNorm(p1, p2):\n\treturn p1/(p1 + p2)\n\n\nprint \"54.0421\"\n"}],"varID":0,"branchID":0,"commitID":0,"output":["3758d08bb5374d7d144a5fd3f1469d12af751106"]}