{"atomicTaroViewState":{"variants":[{"variants":{"currentVersion":{"title":"Ollie","subtitle":0,"text":"def distance(x0, y0, x1, y1):\n\treturn math.sqrt((x1-x0)**2 + (y1-y0)**2)\n#Ollie is a dog.\n\n\ndef computeAngle (p1, p2):\n\tdot = 0\n","date":"08/10/2016 10:09pm","children":[]},"rootVersion":{"title":"Ollie","subtitle":0,"text":"def distance(x0, y0, x1, y1):\n\treturn math.sqrt((x1-x0)**2 + (y1-y0)**2)\n#Ollie is a dog.\n\n\ndef computeAngle (p1, p2):\n\tdot = 0\n","date":"08/10/2016 10:09pm","children":[]}}},{"variants":{"currentVersion":{"title":"goldfish","subtitle":0,"text":"def computeAngle (p1, p2):\n\tdot = 0\n\tif computeNorm(p2[0], p2[1]) == 0 or computeNorm(p1[0], p1[1])==0: #may be incorrect","date":"08/10/2016 10:15pm","children":[]},"rootVersion":{"title":"goldfish","subtitle":0,"text":"def computeAngle (p1, p2):\n\tdot = 0\n\tif computeNorm(p2[0], p2[1]) == 0 or computeNorm(p1[0], p1[1])==0: #may be incorrect","date":"08/10/2016 10:15pm","children":[]}}},{"variants":{"currentVersion":{"title":"cat","subtitle":0,"text":"def compute_AllAngles (trip):\n\tdV =  np.diff(trip, axis = 0) #x1-x0 and y1-y0\n\tangles = np.empty(shape = dV.shape[0])\n\tfor i in range(1, trip.shape[0] - 1):\n\t\tang = computeAngle(dV[i-1], dV[i])\n\t\tnp.append(angles, [ang, dV[i][2]]) #append angle with timepoint\n","date":"08/10/2016 10:09pm","children":[]},"rootVersion":{"title":"cat","subtitle":0,"text":"def compute_AllAngles (trip):\n\tdV =  np.diff(trip, axis = 0) #x1-x0 and y1-y0\n\tangles = np.empty(shape = dV.shape[0])\n\tfor i in range(1, trip.shape[0] - 1):\n\t\tang = computeAngle(dV[i-1], dV[i])\n\t\tnp.append(angles, [ang, dV[i][2]]) #append angle with timepoint\n","date":"08/10/2016 10:09pm","children":[]}}},{"variants":{"currentVersion":{"title":"Speed-1-1","subtitle":0,"text":"\"\"\"def findSpeed_Dist(trip):\n\tv = []\n\tdist = 0\n\tfor i in range(1, trip.shape[0]):\n\t\td = distance(trip[i-1][0], trip[i-1][1], trip[i][0], trip[i][1])\n\t\tdist += d\n\t\tv.append(3.6*d)\n\treturn v,dist\"\"\"\n","date":"08/10/2016 10:09pm","children":[]},"rootVersion":{"title":"Speed-1-1","subtitle":0,"text":"\"\"\"def findSpeed_Dist(trip):\n\tv = []\n\tdist = 0\n\tfor i in range(1, trip.shape[0]):\n\t\td = distance(trip[i-1][0], trip[i-1][1], trip[i][0], trip[i][1])\n\t\tdist += d\n\t\tv.append(3.6*d)\n\treturn v,dist\"\"\"\n","date":"08/10/2016 10:09pm","children":[]}}},{"variants":{"currentVersion":{"title":"initTrip-1-1","subtitle":0,"text":"\tdef __init__(self, filename):\n\n\t\t#read in trip from file\n\t \ttripPath = np.genfromtxt(filename, delimiter=',', skip_header=1)\n\t \t#add a column for time in seconds (so if we chop data, still have timepoints)\n\t \tself.tripPath = np.append(tripPath, np.arange(tripPath.shape[0]).reshape(tripPath.shape[0],1),1)\n\n\t \t#self.rdp = rdp.rdp_simplify(self.tripPath, epsilon = 0.75)\n\n\t \t#self.angles = compute_AllAngles(self.rdp)\n\t \t#print self.angles\n\n\n\t \t#self.v, self.tripDist = findSpeed_Dist(self.tripPath)\n\t \tself.findSpeed_Hist(self.tripPath)\n\n\t\tself.tripTime = self.tripPath.shape[0] #length of trip in seconds\n\t \tself.advSpeed = self.tripDist/self.tripTime #meters per second\n\t \tself.maxSpeed = max(self.v)\n\n\t \tself.stops = findStops(self.v)#len(findStops(self.v))\n","date":"08/10/2016 10:09pm","children":[]},"rootVersion":{"title":"initTrip-1-1","subtitle":0,"text":"\tdef __init__(self, filename):\n\n\t\t#read in trip from file\n\t \ttripPath = np.genfromtxt(filename, delimiter=',', skip_header=1)\n\t \t#add a column for time in seconds (so if we chop data, still have timepoints)\n\t \tself.tripPath = np.append(tripPath, np.arange(tripPath.shape[0]).reshape(tripPath.shape[0],1),1)\n\n\t \t#self.rdp = rdp.rdp_simplify(self.tripPath, epsilon = 0.75)\n\n\t \t#self.angles = compute_AllAngles(self.rdp)\n\t \t#print self.angles\n\n\n\t \t#self.v, self.tripDist = findSpeed_Dist(self.tripPath)\n\t \tself.findSpeed_Hist(self.tripPath)\n\n\t\tself.tripTime = self.tripPath.shape[0] #length of trip in seconds\n\t \tself.advSpeed = self.tripDist/self.tripTime #meters per second\n\t \tself.maxSpeed = max(self.v)\n\n\t \tself.stops = findStops(self.v)#len(findStops(self.v))\n","date":"08/10/2016 10:09pm","children":[]}}}]}}