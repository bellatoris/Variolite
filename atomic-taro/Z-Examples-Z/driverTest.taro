{"atomicTaroViewState":{"variants":{"variants":[{"rootVersion":{"title":"OllieYa","subtitle":0,"text":"def distance(x0, y0, x1, y1):\n\treturn math.sqrt((x1-x0)**2 + (y1-y0)**2)\n#Ollie is a dog.\n\ndef computeAngle (p1, p2):\n\tdot = 0\n\tif computeNorm(p2[0], p2[1]) == 0 or computeNorm(p1[0], p1[1])==0: #may be incorrect\n\t\tdot = 0 #Taro goes here\n\telse:\n\t\tdot = (p2[0]*p1[0]+p2[1]*p1[1])/float(computeNorm(p1[0], p1[1])*computeNorm(p2[0], p2[1]))\n\tif dot > 1:\n\t\tdot = 1 #Fish goes here\n\telif dot < -1:\n\t\tdot = -1\n\treturn math.acos(dot)*180/math.pi","date":"08/29/2016 10:27pm","children":[],"nested":[{"rootVersion":{"title":"TreeTreeYa!","subtitle":0,"text":"\tdot = 0\n\tif computeNorm(p2[0], p2[1]) == 0 or computeNorm(p1[0], p1[1])==0: #may be incorrect\n\t\tdot = 0 #Taro goes here\n\telse:\n\t\tdot = (p2[0]*p1[0]+p2[1]*p1[1])/float(computeNorm(p1[0], p1[1])*computeNorm(p2[0], p2[1]))","date":"08/29/2016 10:27pm","children":[],"nested":[]},"currentVersion":{"title":"TreeTreeYa!"}}]},"currentVersion":{"title":"OllieYa"}},{"rootVersion":{"title":"cat","subtitle":0,"text":"def compute_AllAngles (trip):\n\tdV =  np.diff(trip, axis = 0) #x1-x0 and y1-y0\n\tangles = np.empty(shape = dV.shape[0])\n\tfor i in range(1, trip.shape[0] - 1):\n\t\tang = computeAngle(dV[i-1], dV[i])\n\t\tnp.append(angles, [ang, dV[i][2]]) #append angle with timepoint\n\treturn angles\n\n\n","date":"08/29/2016 10:27pm","children":[],"nested":[]},"currentVersion":{"title":"cat"}},{"rootVersion":{"title":" Speed","subtitle":0,"text":"\"\"\"def findSpeed_Dist(trip):\n\tv = []\n\tdist = 0\n\tfor i in range(1, trip.shape[0]):\n\t\td = distance(trip[i-1][0], trip[i-1][1], trip[i][0], trip[i][1])\n\t\tdist += d\n\t\tv.append(3.6*d)\n\treturn v,dist\"\"\"\n\n\ndef findStops(speeds):","date":"08/29/2016 10:27pm","children":[],"nested":[]},"currentVersion":{"title":" Speed"}}]}}}