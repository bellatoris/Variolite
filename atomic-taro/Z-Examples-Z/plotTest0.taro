{"atomicTaroViewState":{"variants":{"rootVersion":{"active":true,"id":"d6ca9f5656d095231521f4aa49a8c7efe8a43d9b","title":"plotTest0.py","subtitle":0,"text":"import matplotlib.pyplot as pyplot\nfrom math import hypot\nimport numpy as np\nimport os\nimport rdp_trip\nimport sys\n\ndef distance(x0, y0, x1, y1):\n    \"\"\"Computes 2D euclidean distance\"\"\"\n    return hypot((x1 - x0), (y1 - y0))\n\ndef findStops(speeds):\n\tstops = [] #stops are a start and end time pair\n\tstart = -1\n\tend = -1\n\tfor i in range(1, len(speeds)):\n\t\tadvS = (speeds[i] + speeds[i-1])/2 #smooth out noise in stop duration\n\t\tif speeds[i] == 0: #start of stop\n\t\t\tend = i\n\t\t\tif start == -1:\n\t\t\t\tstart = i\n\t\telif start > -1 and advS > 1:\n\t\t\tstops.append([start,end])\n\t\t\tstart = -1\n\t\t\tend = -1\n\tif start > -1:\n\t\tstops.append([start, len(speeds)])\n\treturn stops\n\ndef velocities_and_distance_covered(trip):\n\t\"\"\"\n    Returns velocities just using difference in distance between coordinates as well as accumulated distances\n    Input: x-coordinates and y-coordinates as lists\n    Output: list of velocities\n    \"\"\"\n\tv = []\n\tdistancesum = 0.0\n\tfor i in range(1, len(trip)):\n\t\tdist = distance(trip[i-1][0], trip[i-1][1], trip[i][0], trip[i][1])\n\t\tv.append(dist)\n\t\tdistancesum += dist\n\treturn v, distancesum\n\ndef plotTrip(filename):\n\ttripName = int(os.path.basename(filename).split(\".\")[0])\n\ttripPath = np.genfromtxt(filename, delimiter=',', skip_header=1, dtype=(float,float))\n\n\treducedTrip = rdp_trip.rdp(tripPath, epsilon=0.75)\n\tv, distancesum = velocities_and_distance_covered(tripPath)\n\tstops = findStops(v)\n\n\tstartPoint = (tripPath[0][0], tripPath[1][1])\n\tpyplot.plot(tripPath[:,0], tripPath[:,1], 'bx', startPoint[0], startPoint[1], 'bs')\n\tfor (x, y) in reducedTrip:\n   \t\t pyplot.plot(x, y, 'ro')\n   \t\t print str((x,y))\n   \tfor (st,en) in stops:\n   \t\t pyplot.plot(tripPath[st][0], tripPath[st][1], \"go\")\n\n\tpyplot.ylabel('y')\n\tpyplot.xlabel('x')\n\tpyplot.show()\n\ndoc = sys.argv[1]\nplotTrip(doc)\n","date":"09/17/2016 2:42pm","branches":[],"commits":[],"nested":[{"rootVersion":{"active":true,"id":"e5b9e1cad66155e7556ffd4b3b630a0ea65905f4","title":"plot","subtitle":0,"text":"def plotTrip(filename):\n\ttripName = int(os.path.basename(filename).split(\".\")[0])\n\ttripPath = np.genfromtxt(filename, delimiter=',', skip_header=1, dtype=(float,float))\n\n\treducedTrip = rdp_trip.rdp(tripPath, epsilon=0.75)\n\tv, distancesum = velocities_and_distance_covered(tripPath)\n\tstops = findStops(v)\n\n\tstartPoint = (tripPath[0][0], tripPath[1][1])\n\tpyplot.plot(tripPath[:,0], tripPath[:,1], 'bx', startPoint[0], startPoint[1], 'bs')\n\tfor (x, y) in reducedTrip:\n   \t\t pyplot.plot(x, y, 'ro')\n   \t\t print str((x,y))\n   \tfor (st,en) in stops:\n   \t\t pyplot.plot(tripPath[st][0], tripPath[st][1], \"go\")\n\n\tpyplot.ylabel('y')\n\tpyplot.xlabel('x')\n\tpyplot.show()","date":"09/17/2016 2:42pm","branches":[],"commits":[],"nested":[{"rootVersion":{"active":true,"id":"759ae7168526aed8b52e0ceef5bf6b449266523e","title":"calculate trip","subtitle":0,"text":"\treducedTrip = rdp_trip.rdp(tripPath, epsilon=0.75)\n\tv, distancesum = velocities_and_distance_covered(tripPath)\n\tstops = findStops(v)","date":"09/17/2016 2:42pm","branches":[{"active":true,"id":"4640db6f71a781fa831261afad15f9a986a0ab46","title":"reduce trip first","text":"\treducedTrip = rdp_trip.rdp(tripPath, epsilon=0.75)\n\tv, distancesum = velocities_and_distance_covered(tripPath)\n\tstops = findStops(v)","date":"09/17/2016 2:43pm","branches":[],"commits":[],"nested":[]}],"commits":[],"nested":[]},"currentVersion":{"title":"reduce trip first"}}]},"currentVersion":{"title":"plot"}}]},"currentVersion":{"title":"plotTest0.py"}}}}